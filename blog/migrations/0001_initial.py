# Generated by Django 5.1.4 on 2025-09-16 19:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('public', 'Public')], default='draft', max_length=10)),
                ('content_source', models.CharField(choices=[('user_written', 'User Written'), ('ai_generated', 'AI Generated'), ('ai_rewritten', 'AI Rewritten')], default='user_written', max_length=20)),
                ('ai_prompt', models.TextField(blank=True, help_text='Prompt used for AI generation/rewriting', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('excerpt', models.TextField(blank=True, help_text='Brief description of the blog', max_length=300)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='blog.blog')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_views', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_comments', to=settings.AUTH_USER_MODEL)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.blog')),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_liked', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='blog.blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SavedBlog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by_users', to='blog.blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_blogs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['status', '-created_at'], name='blog_blog_status_ec8f84_idx'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['author', '-created_at'], name='blog_blog_author__f1ab3e_idx'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['slug'], name='blog_blog_slug_d925e3_idx'),
        ),
        migrations.AddIndex(
            model_name='blogview',
            index=models.Index(fields=['blog', '-created_at'], name='blog_blogvi_blog_id_afe99b_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['blog', '-created_at'], name='blog_commen_blog_id_6d5857_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['author', '-created_at'], name='blog_commen_author__3b9f5c_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['blog', 'is_liked'], name='blog_like_blog_id_e5f999_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['user', '-created_at'], name='blog_like_user_id_9d7549_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('blog', 'user')},
        ),
        migrations.AddIndex(
            model_name='savedblog',
            index=models.Index(fields=['user', '-created_at'], name='blog_savedb_user_id_e4be6f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='savedblog',
            unique_together={('blog', 'user')},
        ),
    ]
